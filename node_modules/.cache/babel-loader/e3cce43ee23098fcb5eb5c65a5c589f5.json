{"ast":null,"code":"var _jsxFileName = \"/Users/ihsuanhuang/Documents/m3hw/petest/petlove/src/components/Register.js\",\n    _s = $RefreshSig$();\n\n// import { useContext, useState } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import { createUserWithEmailAndPassword } from \"firebase/auth\";\n// import { auth } from \"../firebase\";\n// import { AuthContext } from \"../context/AuthContext\";\n// import InputLogin from \"../components/InputLogin\";\n// import styles from \"./Register.module.css\";\n// const Register = () => {\n//     const inputs = [\n//         {\n//             id: 1,\n//             name: \"email\",\n//             type: \"email\",\n//             placeholder: \"Email\",\n//             errorMessage: \"It should be a valid email adress\",\n//             label: \"Email\",\n//             required: true,\n//         },\n//         {\n//             id: 2,\n//             name: \"password\",\n//             label: \"Password\",\n//             type: \"password\",\n//             placeholder: \"Password\",\n//             errorMessage:\n//                 \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n//             pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n//             required: true,\n//         },\n//         {\n//             id: 3,\n//             name: \"repeatPassword\",\n//             label: \"Confirm Password\",\n//             type: \"password\",\n//             placeholder: \"Confirm Password\",\n//             errorMessage: \"Password doesn't match\",\n//             //   pattern: \"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$\",\n//             required: true,\n//         },\n//     ];\n//     const [error, setError] = useState(false);\n//     const [values, setValues] = useState({\n//         email: \"\",\n//         password: \"\",\n//         repeatPassword: \"\"\n//     });\n//     const navigate = useNavigate();\n//     const { dispatch } = useContext(AuthContext);\n//     const onChange = (e) => {\n//         setValues({ ...values, [e.target.name]: e.target.value });\n//     };\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n//         if (values.password !== values.repeatPassword) {\n//             setError(true)\n//             return;\n//         } else {\n//             setError(false)\n//         }\n//         createUserWithEmailAndPassword(auth, values.email, values.password)\n//             .then((userCredential) => {\n//                 const user = userCredential.user;\n//                 dispatch({ type: \"REGISTER\", payload: user });\n//                 navigate(\"/\");\n//             })\n//             .catch((error) => {\n//                 setError(true);\n//             });\n//     };\n//     return (\n//         <div className={styles.register}>\n//             <form className={styles.formOne} onSubmit={handleLogin}>\n//                 {inputs.map((input) => (\n//                     <InputLogin\n//                         key={input.id}\n//                         {...input}\n//                         value={values[input.name]}\n//                         onChange={onChange}\n//                     />\n//                 ))}\n//                 <div className={styles[\"divBtn\"]}>\n//                     <button className={styles[\"btnlogin\"]} type=\"submit\">\n//                         Register\n//                     </button>\n//                     <p className={styles[\"p-auth-info\"]}>\n//                         Have already an account?{\" \"}\n//                         <Link className=\"link-auth\" to=\"/login\">\n//                             {\" \"}\n//                             Login\n//                         </Link>{\" \"}\n//                     </p>\n//                     {error && <p className={styles['error-register']}>passwords does not match</p>}\n//                 </div>\n//             </form>\n//         </div>\n//     );\n// };\n// export default Register;\nimport React, { useContext, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport InputLogin from \"../components/InputLogin\";\nimport styles from \"./Register.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  });\n  const navigate = useNavigate();\n  const {\n    dispatch\n  } = useContext(AuthContext);\n  const inputs = [{\n    id: 1,\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    placeholder: \"Email\",\n    required: true,\n    errorMessage: \"Please enter a valid email address\"\n  }, {\n    id: 2,\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    required: true,\n    errorMessage: \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n    pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`\n  }, {\n    id: 3,\n    name: \"repeatPassword\",\n    type: \"password\",\n    label: \"Confirm Password\",\n    placeholder: \"Confirm Password\",\n    required: true,\n    errorMessage: \"Passwords do not match\"\n  }];\n\n  const handleInputChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (values.password !== values.repeatPassword) {\n      setError(true);\n      return;\n    } else {\n      setError(false);\n    }\n\n    createUserWithEmailAndPassword(auth, values.email, values.password).then(userCredential => {\n      const user = userCredential.user;\n      dispatch({\n        type: \"REGISTER\",\n        payload: user\n      });\n      navigate(\"/\");\n    }).catch(error => {\n      setError(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.register,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.formOne,\n      onSubmit: handleSubmit,\n      children: [inputs.map(input => /*#__PURE__*/_jsxDEV(InputLogin, {\n        type: input.type,\n        name: input.name,\n        label: input.label,\n        placeholder: input.placeholder,\n        required: input.required,\n        errorMessage: input.errorMessage,\n        pattern: input.pattern,\n        value: values[input.name],\n        onChange: handleInputChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"divBtn\"],\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles[\"btnlogin\"],\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles[\"p-auth-info\"],\n          children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link-auth\",\n            to: \"/login\",\n            children: [\" \", \"Log in\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles[\"error-register\"],\n          children: inputs[2].errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"dMl7fPtG1eeDSX9wzXc1dlYTvjQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useContext","useState","useNavigate","Link","createUserWithEmailAndPassword","auth","AuthContext","InputLogin","styles","Register","error","setError","values","setValues","email","password","repeatPassword","navigate","dispatch","inputs","id","name","type","label","placeholder","required","errorMessage","pattern","handleInputChange","event","target","value","handleSubmit","preventDefault","then","userCredential","user","payload","catch","register","formOne","map","input"],"sources":["/Users/ihsuanhuang/Documents/m3hw/petest/petlove/src/components/Register.js"],"sourcesContent":["// import { useContext, useState } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n\n// import { createUserWithEmailAndPassword } from \"firebase/auth\";\n// import { auth } from \"../firebase\";\n\n// import { AuthContext } from \"../context/AuthContext\";\n// import InputLogin from \"../components/InputLogin\";\n// import styles from \"./Register.module.css\";\n\n// const Register = () => {\n//     const inputs = [\n//         {\n//             id: 1,\n//             name: \"email\",\n//             type: \"email\",\n//             placeholder: \"Email\",\n//             errorMessage: \"It should be a valid email adress\",\n//             label: \"Email\",\n//             required: true,\n//         },\n//         {\n//             id: 2,\n//             name: \"password\",\n//             label: \"Password\",\n//             type: \"password\",\n//             placeholder: \"Password\",\n//             errorMessage:\n//                 \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n//             pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n//             required: true,\n//         },\n//         {\n//             id: 3,\n//             name: \"repeatPassword\",\n//             label: \"Confirm Password\",\n//             type: \"password\",\n//             placeholder: \"Confirm Password\",\n//             errorMessage: \"Password doesn't match\",\n//             //   pattern: \"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$\",\n//             required: true,\n//         },\n//     ];\n\n\n//     const [error, setError] = useState(false);\n\n//     const [values, setValues] = useState({\n//         email: \"\",\n//         password: \"\",\n//         repeatPassword: \"\"\n//     });\n\n//     const navigate = useNavigate();\n\n//     const { dispatch } = useContext(AuthContext);\n\n//     const onChange = (e) => {\n//         setValues({ ...values, [e.target.name]: e.target.value });\n//     };\n\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n\n//         if (values.password !== values.repeatPassword) {\n//             setError(true)\n//             return;\n//         } else {\n//             setError(false)\n//         }\n\n//         createUserWithEmailAndPassword(auth, values.email, values.password)\n//             .then((userCredential) => {\n\n//                 const user = userCredential.user;\n//                 dispatch({ type: \"REGISTER\", payload: user });\n\n//                 navigate(\"/\");\n\n//             })\n//             .catch((error) => {\n//                 setError(true);\n//             });\n//     };\n\n//     return (\n//         <div className={styles.register}>\n//             <form className={styles.formOne} onSubmit={handleLogin}>\n//                 {inputs.map((input) => (\n//                     <InputLogin\n//                         key={input.id}\n//                         {...input}\n//                         value={values[input.name]}\n//                         onChange={onChange}\n//                     />\n//                 ))}\n//                 <div className={styles[\"divBtn\"]}>\n//                     <button className={styles[\"btnlogin\"]} type=\"submit\">\n//                         Register\n//                     </button>\n//                     <p className={styles[\"p-auth-info\"]}>\n//                         Have already an account?{\" \"}\n//                         <Link className=\"link-auth\" to=\"/login\">\n//                             {\" \"}\n//                             Login\n//                         </Link>{\" \"}\n//                     </p>\n//                     {error && <p className={styles['error-register']}>passwords does not match</p>}\n//                 </div>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default Register;\n\nimport React, { useContext, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nimport InputLogin from \"../components/InputLogin\";\nimport styles from \"./Register.module.css\";\n\nconst Register = () => {\n  const [error, setError] = useState(false);\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n  });\n\n  const navigate = useNavigate();\n  const { dispatch } = useContext(AuthContext);\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      placeholder: \"Email\",\n      required: true,\n      errorMessage: \"Please enter a valid email address\",\n    },\n    {\n      id: 2,\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      placeholder: \"Password\",\n      required: true,\n      errorMessage:\n        \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n      pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n    },\n    {\n      id: 3,\n      name: \"repeatPassword\",\n      type: \"password\",\n      label: \"Confirm Password\",\n      placeholder: \"Confirm Password\",\n      required: true,\n      errorMessage: \"Passwords do not match\",\n    },\n  ];\n\n  const handleInputChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (values.password !== values.repeatPassword) {\n      setError(true);\n      return;\n    } else {\n      setError(false);\n    }\n\n    createUserWithEmailAndPassword(auth, values.email, values.password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        dispatch({ type: \"REGISTER\", payload: user });\n        navigate(\"/\");\n      })\n      .catch((error) => {\n        setError(true);\n      });\n  };\n\n  return (\n    <div className={styles.register}>\n      <form className={styles.formOne} onSubmit={handleSubmit}>\n        {inputs.map((input) => (\n          <InputLogin\n            key={input.id}\n            type={input.type}\n            name={input.name}\n            label={input.label}\n            placeholder={input.placeholder}\n            required={input.required}\n            errorMessage={input.errorMessage}\n            pattern={input.pattern}\n            value={values[input.name]}\n            onChange={handleInputChange}\n          />\n        ))}\n        <div className={styles[\"divBtn\"]}>\n          <button className={styles[\"btnlogin\"]} type=\"submit\">\n            Register\n          </button>\n          <p className={styles[\"p-auth-info\"]}>\n            Already have an account?{\" \"}\n            <Link className=\"link-auth\" to=\"/login\">\n              {\" \"}\n              Log in\n            </Link>{\" \"}\n          </p>\n          {error && (\n            <p className={styles[\"error-register\"]}>\n              {inputs[2].errorMessage}\n            </p>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}