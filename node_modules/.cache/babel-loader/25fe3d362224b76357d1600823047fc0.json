{"ast":null,"code":"var _jsxFileName = \"/Users/ihsuanhuang/Documents/m3hw/petest/petlove/src/context/PetContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { getDoc } from \"firebase/firestore\";\nimport { addPet, getAll, updatePet } from \"../services/petService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PetContext = /*#__PURE__*/createContext({\n  pets: [],\n  addNewPet: pet => {},\n  updateCurrentPet: pet => {},\n  removePet: petId => {},\n  likePet: (pet, userId) => {},\n  unLikePet: (pet, userId) => {}\n});\nexport const PetContextProvider = props => {\n  _s();\n\n  const [pets, setPets] = useState([]);\n  useEffect(() => {\n    getAll().then(pets => {\n      const currentPets = [];\n      pets.forEach(p => {\n        const pet = {\n          id: p.id,\n          ...p.data()\n        };\n        currentPets.push(pet);\n      });\n      setPets(currentPets);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const addNewPet = async pet => {\n    const refPet = await addPet(pet);\n    const docSnap = await getDoc(refPet);\n    setPets(prevState => prevState.concat({\n      id: docSnap.id,\n      name: docSnap.data().name,\n      bread: docSnap.data().bread,\n      imageUrl: docSnap.data().imageUrl,\n      description: docSnap.data().description,\n      ownerId: docSnap.data().ownerId,\n      likedBy: docSnap.data().likedBy\n    }));\n  };\n\n  const likePet = async (pet, userId) => {\n    // const index = pets.findIndex((p) => p.id === pet.id)\n    // const newRef = [...pets];\n    let likedBy = pet.likedBy || [];\n    const updatedLikePet = { ...pet,\n      likedBy: [...likedBy, userId]\n    };\n    await updateCurrentPet(updatedLikePet);\n  };\n\n  const unLikePet = async (pet, userId) => {\n    const likedIndex = pet.likedBy.findIndex(id => id === userId);\n    let likedBy = [...pet.likedBy];\n    likedBy = [...likedBy.slice(0, likedIndex), ...likedBy.slice(likedIndex + 1)];\n    const updatedPet = { ...pet,\n      likedBy: likedBy\n    };\n    await updateCurrentPet(updatedPet);\n  };\n\n  const updateCurrentPet = async pet => {\n    const result = await updatePet(pet);\n    const index = pets.findIndex(p => p.id === result.id);\n    const updatedPets = [...pets];\n    updatedPets[index] = { ...result,\n      id: pet.id\n    };\n    setPets(updatedPets);\n  };\n\n  const removePet = petId => {\n    setPets(prevState => prevState.filter(pet => pet.id !== petId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(PetContext.Provider, {\n    value: {\n      pets,\n      addNewPet,\n      updateCurrentPet,\n      removePet,\n      likePet,\n      unLikePet\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PetContextProvider, \"7RBAgWZCtqlXVpMU/6w9/5IUzu8=\");\n\n_c = PetContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","getDoc","addPet","getAll","updatePet","PetContext","pets","addNewPet","pet","updateCurrentPet","removePet","petId","likePet","userId","unLikePet","PetContextProvider","props","setPets","then","currentPets","forEach","p","id","data","push","catch","error","console","log","refPet","docSnap","prevState","concat","name","bread","imageUrl","description","ownerId","likedBy","updatedLikePet","likedIndex","findIndex","slice","updatedPet","result","index","updatedPets","filter","children"],"sources":["/Users/ihsuanhuang/Documents/m3hw/petest/petlove/src/context/PetContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nimport { getDoc } from \"firebase/firestore\";\n\nimport { addPet, getAll, updatePet } from \"../services/petService\";\n\n\nexport const PetContext = createContext({\n    pets: [],\n    addNewPet: (pet) => { },\n    updateCurrentPet: (pet) => { },\n    removePet: (petId) => { },\n    likePet: (pet, userId) => { },\n    unLikePet: (pet, userId) => { },\n})\n\nexport const PetContextProvider = (props) => {\n    const [pets, setPets] = useState([]);\n\n\n    useEffect(() => {\n        getAll().then((pets) => {\n            const currentPets = [];\n\n            pets.forEach((p) => {\n                const pet = {\n                    id: p.id,\n                    ...p.data()\n                }\n                currentPets.push(pet)\n            });\n            setPets(currentPets);\n        }).catch((error) => {\n            console.log(error)\n        })\n    }, [])\n\n\n    const addNewPet = async (pet) => {\n\n        const refPet = await addPet(pet);\n        const docSnap = await getDoc(refPet);\n\n        setPets((prevState) =>\n            prevState.concat({\n\n                id: docSnap.id,\n                name: docSnap.data().name,\n                bread: docSnap.data().bread,\n                imageUrl: docSnap.data().imageUrl,\n                description: docSnap.data().description,\n                ownerId: docSnap.data().ownerId,\n                likedBy: docSnap.data().likedBy,\n            })\n        );\n    };\n\n    const likePet = async (pet, userId) => {\n\n        // const index = pets.findIndex((p) => p.id === pet.id)\n        // const newRef = [...pets];\n\n        let likedBy = pet.likedBy || [];\n        const updatedLikePet = { ...pet, likedBy: [...likedBy, userId] }\n\n        await updateCurrentPet(updatedLikePet);\n\n    }\n\n    const unLikePet = async (pet, userId) => {\n\n        const likedIndex = pet.likedBy.findIndex((id) => id === userId);\n\n        let likedBy = [...pet.likedBy];\n\n        likedBy = [\n            ...likedBy.slice(0, likedIndex),\n            ...likedBy.slice(likedIndex + 1),\n        ];\n\n        const updatedPet = { ...pet, likedBy: likedBy };\n\n        await updateCurrentPet(updatedPet);\n    }\n\n    const updateCurrentPet = async (pet) => {\n\n        const result = await updatePet(pet)\n        const index = pets.findIndex((p) => p.id === result.id)\n\n        const updatedPets = [...pets]\n        updatedPets[index] = { ...result, id: pet.id }\n\n\n        setPets(updatedPets)\n    }\n\n    const removePet = (petId) => {\n        setPets((prevState) => prevState.filter((pet) => pet.id !== petId));\n    };\n\n    return (\n        <PetContext.Provider\n            value={{\n                pets,\n                addNewPet,\n                updateCurrentPet,\n                removePet,\n                likePet,\n                unLikePet,\n            }}>\n            {props.children}\n        </PetContext.Provider>\n    );\n} "],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,SAAzB,QAA0C,wBAA1C;;AAGA,OAAO,MAAMC,UAAU,gBAAGP,aAAa,CAAC;EACpCQ,IAAI,EAAE,EAD8B;EAEpCC,SAAS,EAAGC,GAAD,IAAS,CAAG,CAFa;EAGpCC,gBAAgB,EAAGD,GAAD,IAAS,CAAG,CAHM;EAIpCE,SAAS,EAAGC,KAAD,IAAW,CAAG,CAJW;EAKpCC,OAAO,EAAE,CAACJ,GAAD,EAAMK,MAAN,KAAiB,CAAG,CALO;EAMpCC,SAAS,EAAE,CAACN,GAAD,EAAMK,MAAN,KAAiB,CAAG;AANK,CAAD,CAAhC;AASP,OAAO,MAAME,kBAAkB,GAAIC,KAAD,IAAW;EAAA;;EACzC,MAAM,CAACV,IAAD,EAAOW,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;EAGAD,SAAS,CAAC,MAAM;IACZI,MAAM,GAAGe,IAAT,CAAeZ,IAAD,IAAU;MACpB,MAAMa,WAAW,GAAG,EAApB;MAEAb,IAAI,CAACc,OAAL,CAAcC,CAAD,IAAO;QAChB,MAAMb,GAAG,GAAG;UACRc,EAAE,EAAED,CAAC,CAACC,EADE;UAER,GAAGD,CAAC,CAACE,IAAF;QAFK,CAAZ;QAIAJ,WAAW,CAACK,IAAZ,CAAiBhB,GAAjB;MACH,CAND;MAOAS,OAAO,CAACE,WAAD,CAAP;IACH,CAXD,EAWGM,KAXH,CAWUC,KAAD,IAAW;MAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH,CAbD;EAcH,CAfQ,EAeN,EAfM,CAAT;;EAkBA,MAAMnB,SAAS,GAAG,MAAOC,GAAP,IAAe;IAE7B,MAAMqB,MAAM,GAAG,MAAM3B,MAAM,CAACM,GAAD,CAA3B;IACA,MAAMsB,OAAO,GAAG,MAAM7B,MAAM,CAAC4B,MAAD,CAA5B;IAEAZ,OAAO,CAAEc,SAAD,IACJA,SAAS,CAACC,MAAV,CAAiB;MAEbV,EAAE,EAAEQ,OAAO,CAACR,EAFC;MAGbW,IAAI,EAAEH,OAAO,CAACP,IAAR,GAAeU,IAHR;MAIbC,KAAK,EAAEJ,OAAO,CAACP,IAAR,GAAeW,KAJT;MAKbC,QAAQ,EAAEL,OAAO,CAACP,IAAR,GAAeY,QALZ;MAMbC,WAAW,EAAEN,OAAO,CAACP,IAAR,GAAea,WANf;MAObC,OAAO,EAAEP,OAAO,CAACP,IAAR,GAAec,OAPX;MAQbC,OAAO,EAAER,OAAO,CAACP,IAAR,GAAee;IARX,CAAjB,CADG,CAAP;EAYH,CAjBD;;EAmBA,MAAM1B,OAAO,GAAG,OAAOJ,GAAP,EAAYK,MAAZ,KAAuB;IAEnC;IACA;IAEA,IAAIyB,OAAO,GAAG9B,GAAG,CAAC8B,OAAJ,IAAe,EAA7B;IACA,MAAMC,cAAc,GAAG,EAAE,GAAG/B,GAAL;MAAU8B,OAAO,EAAE,CAAC,GAAGA,OAAJ,EAAazB,MAAb;IAAnB,CAAvB;IAEA,MAAMJ,gBAAgB,CAAC8B,cAAD,CAAtB;EAEH,CAVD;;EAYA,MAAMzB,SAAS,GAAG,OAAON,GAAP,EAAYK,MAAZ,KAAuB;IAErC,MAAM2B,UAAU,GAAGhC,GAAG,CAAC8B,OAAJ,CAAYG,SAAZ,CAAuBnB,EAAD,IAAQA,EAAE,KAAKT,MAArC,CAAnB;IAEA,IAAIyB,OAAO,GAAG,CAAC,GAAG9B,GAAG,CAAC8B,OAAR,CAAd;IAEAA,OAAO,GAAG,CACN,GAAGA,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBF,UAAjB,CADG,EAEN,GAAGF,OAAO,CAACI,KAAR,CAAcF,UAAU,GAAG,CAA3B,CAFG,CAAV;IAKA,MAAMG,UAAU,GAAG,EAAE,GAAGnC,GAAL;MAAU8B,OAAO,EAAEA;IAAnB,CAAnB;IAEA,MAAM7B,gBAAgB,CAACkC,UAAD,CAAtB;EACH,CAdD;;EAgBA,MAAMlC,gBAAgB,GAAG,MAAOD,GAAP,IAAe;IAEpC,MAAMoC,MAAM,GAAG,MAAMxC,SAAS,CAACI,GAAD,CAA9B;IACA,MAAMqC,KAAK,GAAGvC,IAAI,CAACmC,SAAL,CAAgBpB,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASsB,MAAM,CAACtB,EAAtC,CAAd;IAEA,MAAMwB,WAAW,GAAG,CAAC,GAAGxC,IAAJ,CAApB;IACAwC,WAAW,CAACD,KAAD,CAAX,GAAqB,EAAE,GAAGD,MAAL;MAAatB,EAAE,EAAEd,GAAG,CAACc;IAArB,CAArB;IAGAL,OAAO,CAAC6B,WAAD,CAAP;EACH,CAVD;;EAYA,MAAMpC,SAAS,GAAIC,KAAD,IAAW;IACzBM,OAAO,CAAEc,SAAD,IAAeA,SAAS,CAACgB,MAAV,CAAkBvC,GAAD,IAASA,GAAG,CAACc,EAAJ,KAAWX,KAArC,CAAhB,CAAP;EACH,CAFD;;EAIA,oBACI,QAAC,UAAD,CAAY,QAAZ;IACI,KAAK,EAAE;MACHL,IADG;MAEHC,SAFG;MAGHE,gBAHG;MAIHC,SAJG;MAKHE,OALG;MAMHE;IANG,CADX;IAAA,UASKE,KAAK,CAACgC;EATX;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CAlGM;;GAAMjC,kB;;KAAAA,kB"},"metadata":{},"sourceType":"module"}