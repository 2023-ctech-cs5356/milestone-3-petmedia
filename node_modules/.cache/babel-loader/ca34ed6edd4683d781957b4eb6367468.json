{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ihsuanhuang/Documents/m3hw/petest/petlove/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/Users/ihsuanhuang/Documents/m3hw/petest/petlove/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/ihsuanhuang/Documents/m3hw/petest/petlove/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/ihsuanhuang/Documents/m3hw/petest/petlove/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/ihsuanhuang/Documents/m3hw/petest/petlove/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import from firebase, react, and petService files\nimport{getDoc}from\"firebase/firestore\";import{useEffect,createContext,useState}from\"react\";import{addPet,getAll,updatePet}from\"../services/petService\";// create the PetContext object with default values for each property.\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var PetContext=/*#__PURE__*/createContext({pets:[],addNewPet:function addNewPet(pet){},updateCurrentPet:function updateCurrentPet(pet){},removePet:function removePet(petId){},likePet:function likePet(pet,userId){},unLikePet:function unLikePet(pet,userId){}});export var PetContextProvider=function PetContextProvider(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),pets=_useState2[0],setPets=_useState2[1];// fetche all pets data from some external data source using getAll() function, then maps over the data to create an array of pets with id and other properties.\n// then, updates the state of the component with the array of pets using setPets()\nuseEffect(function(){try{getAll().then(function(pets){var currentPets=[];pets.forEach(function(p){var pet=_objectSpread({id:p.id},p.data());currentPets.push(pet);});setPets(currentPets);});}catch(error){console.log(error);}},[]);// create a enw profile for a pet\nvar addNewPet=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(pet){var refPet,docSnap,newPet;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return addPet(pet);case 3:refPet=_context.sent;_context.next=6;return getDoc(refPet);case 6:docSnap=_context.sent;newPet=_objectSpread({id:docSnap.id},docSnap.data());setPets(function(prevPets){return[].concat(_toConsumableArray(prevPets),[newPet]);});_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function addNewPet(_x){return _ref.apply(this,arguments);};}();// remove pet\nvar removePet=function removePet(petId){// find the pet\nsetPets(function(prevState){return prevState.filter(function(pet){return pet.id!==petId;});});};// function to like a pet\nvar likePet=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(pet,userId){var likedBy,updatedPet;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;// find and like the pet\nlikedBy=pet.likedBy?[].concat(_toConsumableArray(pet.likedBy),[userId]):[userId];// update \nupdatedPet=_objectSpread(_objectSpread({},pet),{},{likedBy:likedBy});_context2.next=5;return updateCurrentPet(updatedPet);case 5:_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function likePet(_x2,_x3){return _ref2.apply(this,arguments);};}();// function to unlike the pet already liked before\nvar unLikePet=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(pet,userId){var likedBy,updatedPet;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;// find and remove the pet\nlikedBy=pet.likedBy.filter(function(id){return id!==userId;});// update the pet\nupdatedPet=_objectSpread(_objectSpread({},pet),{},{likedBy:likedBy});_context3.next=5;return updateCurrentPet(updatedPet);case 5:_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return function unLikePet(_x4,_x5){return _ref3.apply(this,arguments);};}();// update status of pet\nvar updateCurrentPet=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(pet){var result,index,updatedPets;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return updatePet(pet);case 3:result=_context4.sent;//  not working\n// const updatedPets = pets.map(p => p.id === result.id ? { id: result.id, ...result.data() } : p);\n// find pet\nindex=pets.findIndex(function(p){return p.id===result.id;});updatedPets=_toConsumableArray(pets);// update that pet\nupdatedPets[index]=_objectSpread(_objectSpread({},result),{},{id:pet.id});setPets(updatedPets);_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[0,10]]);}));return function updateCurrentPet(_x6){return _ref4.apply(this,arguments);};}();// return petContextValue\nvar petContextValue={pets:pets,addNewPet:addNewPet,likePet:likePet,unLikePet:unLikePet,updateCurrentPet:updateCurrentPet,removePet:removePet};// return \nreturn/*#__PURE__*/_jsx(PetContext.Provider,{value:petContextValue,children:props.children});};","map":{"version":3,"names":["getDoc","useEffect","createContext","useState","addPet","getAll","updatePet","PetContext","pets","addNewPet","pet","updateCurrentPet","removePet","petId","likePet","userId","unLikePet","PetContextProvider","props","setPets","then","currentPets","forEach","p","id","data","push","error","console","log","refPet","docSnap","newPet","prevPets","prevState","filter","likedBy","updatedPet","result","index","findIndex","updatedPets","petContextValue","children"],"sources":["/Users/ihsuanhuang/Documents/m3hw/petest/petlove/src/context/PetContext.js"],"sourcesContent":["// import from firebase, react, and petService files\nimport { getDoc } from \"firebase/firestore\";\nimport { useEffect, createContext, useState } from \"react\";\nimport { addPet, getAll, updatePet } from \"../services/petService\";\n\n\n// create the PetContext object with default values for each property.\nexport const PetContext = createContext({\n    pets: [],\n    addNewPet: (pet) => { },\n    updateCurrentPet: (pet) => { },\n    removePet: (petId) => { },\n    likePet: (pet, userId) => { },\n    unLikePet: (pet, userId) => { },\n})\n\nexport const PetContextProvider = (props) => {\n\n    const [pets, setPets] = useState([]);\n\n    // fetche all pets data from some external data source using getAll() function, then maps over the data to create an array of pets with id and other properties.\n    // then, updates the state of the component with the array of pets using setPets()\n\n    useEffect(() => {\n        try {\n            getAll().then((pets) => {\n                const currentPets = [];\n\n                pets.forEach((p) => {\n                    const pet = {\n                        id: p.id,\n                        ...p.data()\n                    }\n                    currentPets.push(pet)\n                });\n                setPets(currentPets);\n            })\n        } catch(error) {\n            console.log(error)\n        }\n    }, [])\n\n\n    // create a enw profile for a pet\n    const addNewPet = async (pet) => {\n        try {\n\n            // create a pet\n            const refPet = await addPet(pet);\n            const docSnap = await getDoc(refPet);\n            const newPet = { id: docSnap.id, ...docSnap.data() };\n            setPets(prevPets => [...prevPets, newPet]);\n\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n    // remove pet\n    const removePet = (petId) => {\n\n        // find the pet\n        setPets((prevState) => prevState.filter(\n            (pet) => pet.id !== petId));\n    };\n\n    // function to like a pet\n    const likePet = async (pet, userId) => {\n        try {\n\n            // find and like the pet\n            const likedBy = pet.likedBy ? [...pet.likedBy, userId] : [userId];\n\n            // update \n            const updatedPet = { ...pet, likedBy };\n            await updateCurrentPet(updatedPet);\n\n        } catch (error) {\n            console.log(error);\n        }\n      };\n\n    // function to unlike the pet already liked before\n    const unLikePet = async (pet, userId) => {\n        try {\n\n            // find and remove the pet\n            const likedBy = pet.likedBy.filter(id => id !== userId);\n            \n            // update the pet\n            const updatedPet = { ...pet, likedBy };\n            await updateCurrentPet(updatedPet);\n\n        } catch (error) {\n            console.log(error);\n        }\n      };\n\n    // update status of pet\n    const updateCurrentPet = async (pet) => {\n        try {\n            const result = await updatePet(pet)\n            \n            //  not working\n            // const updatedPets = pets.map(p => p.id === result.id ? { id: result.id, ...result.data() } : p);\n            \n            // find pet\n            const index = pets.findIndex((p) => p.id === result.id)\n            const updatedPets = [...pets]\n\n            // update that pet\n            updatedPets[index] = { ...result, id: pet.id }   \n            setPets(updatedPets)\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    // return petContextValue\n    const petContextValue = {\n        pets,\n        addNewPet,\n        likePet,\n        unLikePet,\n        updateCurrentPet,\n        removePet\n      };\n\n    // return \n    return (\n    <PetContext.Provider value={petContextValue}>\n        {props.children}\n    </PetContext.Provider>\n    );\n} \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}