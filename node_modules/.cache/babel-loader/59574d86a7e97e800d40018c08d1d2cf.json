{"ast":null,"code":"import { db } from \"../firebase\";\nimport { collection, doc, getDocs, addDoc, setDoc, getDoc, deleteDoc } from \"firebase/firestore\";\nexport async function addPet(data) {\n  try {\n    const petsCollection = collection(db, \"pets\");\n    const newPetRef = await addDoc(petsCollection, data);\n    const newPetDoc = await getDoc(newPetRef);\n    return newPetDoc;\n  } catch (error) {\n    console.error(\"Error adding pet: \", error);\n  }\n}\nexport async function getOne(petId) {\n  try {\n    const petsCollection = collection(db, \"pets\");\n    const petDocRef = doc(petsCollection, petId);\n    const petDoc = await getDoc(petDocRef);\n\n    if (petDoc.exists()) {\n      return petDoc;\n    } else {\n      console.log('No such document');\n    }\n  } catch (error) {\n    console.error(\"Error getting pet: \", error);\n  }\n}\nexport async function getAll() {\n  try {\n    const petsCollection = collection(db, \"pets\");\n    const querySnapshot = await getDocs(petsCollection);\n    return querySnapshot;\n  } catch (error) {\n    console.error(\"Error getting all pets: \", error);\n  }\n}\nexport async function updatePet(pet) {\n  try {\n    const petsCollection = collection(db, \"pets\");\n    const petDocRef = doc(petsCollection, pet.id);\n    await setDoc(petDocRef, pet);\n    const updatedPetDoc = await getDoc(petDocRef);\n    return updatedPetDoc;\n  } catch (error) {\n    console.error(\"Error updating pet: \", error);\n  }\n}\nexport async function deletePet(petId) {\n  try {\n    const petsCollection = collection(db, \"pets\");\n    const petDocRef = doc(petsCollection, petId);\n    const deletedPetDoc = await getDoc(petDocRef);\n    await deleteDoc(petDocRef);\n    return deletedPetDoc;\n  } catch (error) {\n    console.error(\"Error deleting pet: \", error);\n  }\n}","map":{"version":3,"names":["db","collection","doc","getDocs","addDoc","setDoc","getDoc","deleteDoc","addPet","data","petsCollection","newPetRef","newPetDoc","error","console","getOne","petId","petDocRef","petDoc","exists","log","getAll","querySnapshot","updatePet","pet","id","updatedPetDoc","deletePet","deletedPetDoc"],"sources":["/Users/ihsuanhuang/Documents/m3hw/petest/petlove/src/services/petService.js"],"sourcesContent":["\n\nimport { db } from \"../firebase\";\nimport { collection, doc, getDocs, addDoc, setDoc, getDoc, deleteDoc } from \"firebase/firestore\";\n\nexport async function addPet(data) {\n  try {\n    const petsCollection = collection(db, \"pets\");\n    const newPetRef = await addDoc(petsCollection, data);\n    const newPetDoc = await getDoc(newPetRef);\n    return newPetDoc;\n  } catch (error) {\n    console.error(\"Error adding pet: \", error);\n  }\n}\n\nexport async function getOne(petId) {\n  try {\n    const petsCollection = collection(db, \"pets\");\n    const petDocRef = doc(petsCollection, petId);\n    const petDoc = await getDoc(petDocRef);\n    if (petDoc.exists()) {\n      return petDoc;\n    } else {\n      console.log('No such document');\n    }\n  } catch (error) {\n    console.error(\"Error getting pet: \", error);\n  }\n}\n\nexport async function getAll() {\n  try {\n    const petsCollection = collection(db, \"pets\");\n    const querySnapshot = await getDocs(petsCollection);\n    return querySnapshot;\n  } catch (error) {\n    console.error(\"Error getting all pets: \", error);\n  }\n}\n\nexport async function updatePet(pet) {\n  try {\n    const petsCollection = collection(db, \"pets\");\n    const petDocRef = doc(petsCollection, pet.id);\n    await setDoc(petDocRef, pet);\n    const updatedPetDoc = await getDoc(petDocRef);\n    return updatedPetDoc;\n  } catch (error) {\n    console.error(\"Error updating pet: \", error);\n  }\n}\n\nexport async function deletePet(petId) {\n  try {\n    const petsCollection = collection(db, \"pets\");\n    const petDocRef = doc(petsCollection, petId);\n    const deletedPetDoc = await getDoc(petDocRef);\n    await deleteDoc(petDocRef);\n    return deletedPetDoc;\n  } catch (error) {\n    console.error(\"Error deleting pet: \", error);\n  }\n}\n\n\n"],"mappings":"AAEA,SAASA,EAAT,QAAmB,aAAnB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,OAA1B,EAAmCC,MAAnC,EAA2CC,MAA3C,EAAmDC,MAAnD,EAA2DC,SAA3D,QAA4E,oBAA5E;AAEA,OAAO,eAAeC,MAAf,CAAsBC,IAAtB,EAA4B;EACjC,IAAI;IACF,MAAMC,cAAc,GAAGT,UAAU,CAACD,EAAD,EAAK,MAAL,CAAjC;IACA,MAAMW,SAAS,GAAG,MAAMP,MAAM,CAACM,cAAD,EAAiBD,IAAjB,CAA9B;IACA,MAAMG,SAAS,GAAG,MAAMN,MAAM,CAACK,SAAD,CAA9B;IACA,OAAOC,SAAP;EACD,CALD,CAKE,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACD,KAAR,CAAc,oBAAd,EAAoCA,KAApC;EACD;AACF;AAED,OAAO,eAAeE,MAAf,CAAsBC,KAAtB,EAA6B;EAClC,IAAI;IACF,MAAMN,cAAc,GAAGT,UAAU,CAACD,EAAD,EAAK,MAAL,CAAjC;IACA,MAAMiB,SAAS,GAAGf,GAAG,CAACQ,cAAD,EAAiBM,KAAjB,CAArB;IACA,MAAME,MAAM,GAAG,MAAMZ,MAAM,CAACW,SAAD,CAA3B;;IACA,IAAIC,MAAM,CAACC,MAAP,EAAJ,EAAqB;MACnB,OAAOD,MAAP;IACD,CAFD,MAEO;MACLJ,OAAO,CAACM,GAAR,CAAY,kBAAZ;IACD;EACF,CATD,CASE,OAAOP,KAAP,EAAc;IACdC,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;EACD;AACF;AAED,OAAO,eAAeQ,MAAf,GAAwB;EAC7B,IAAI;IACF,MAAMX,cAAc,GAAGT,UAAU,CAACD,EAAD,EAAK,MAAL,CAAjC;IACA,MAAMsB,aAAa,GAAG,MAAMnB,OAAO,CAACO,cAAD,CAAnC;IACA,OAAOY,aAAP;EACD,CAJD,CAIE,OAAOT,KAAP,EAAc;IACdC,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;EACD;AACF;AAED,OAAO,eAAeU,SAAf,CAAyBC,GAAzB,EAA8B;EACnC,IAAI;IACF,MAAMd,cAAc,GAAGT,UAAU,CAACD,EAAD,EAAK,MAAL,CAAjC;IACA,MAAMiB,SAAS,GAAGf,GAAG,CAACQ,cAAD,EAAiBc,GAAG,CAACC,EAArB,CAArB;IACA,MAAMpB,MAAM,CAACY,SAAD,EAAYO,GAAZ,CAAZ;IACA,MAAME,aAAa,GAAG,MAAMpB,MAAM,CAACW,SAAD,CAAlC;IACA,OAAOS,aAAP;EACD,CAND,CAME,OAAOb,KAAP,EAAc;IACdC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;EACD;AACF;AAED,OAAO,eAAec,SAAf,CAAyBX,KAAzB,EAAgC;EACrC,IAAI;IACF,MAAMN,cAAc,GAAGT,UAAU,CAACD,EAAD,EAAK,MAAL,CAAjC;IACA,MAAMiB,SAAS,GAAGf,GAAG,CAACQ,cAAD,EAAiBM,KAAjB,CAArB;IACA,MAAMY,aAAa,GAAG,MAAMtB,MAAM,CAACW,SAAD,CAAlC;IACA,MAAMV,SAAS,CAACU,SAAD,CAAf;IACA,OAAOW,aAAP;EACD,CAND,CAME,OAAOf,KAAP,EAAc;IACdC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;EACD;AACF"},"metadata":{},"sourceType":"module"}